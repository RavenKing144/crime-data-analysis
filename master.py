# -*- coding: utf-8 -*-
"""master.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P7F1FH_JrnKQ3Ov-LBm2mU7PSNGEtVlZ
"""

# Commented out IPython magic to ensure Python compatibility.
from sklearn.cluster import KMeans
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import plotly.graph_objects as go
import matplotlib.cm as cm
import plotly.express as px
# %matplotlib inline


df = pd.read_csv("https://raw.githubusercontent.com/namanvashistha/doctor_strange/master/crime.csv")
#df = pd.read_csv("https://raw.githubusercontent.com/namanvashistha/doctor_strange/master/geo1.csv")
df

plt.scatter(df.Latitude,df.Longitude)
plt.xlabel('Latitude')
plt.ylabel('Longitude')

fig = go.Figure(data=go.Scattergeo(
        lon = df['Longitude'],
        lat = df['Latitude'],
        text = df['Magnitude'],
        mode = 'markers',
        marker_color = 25129,
        ))

fig.update_layout(
        title = 'Crime Report',
        geo_scope='usa',
    )
fig.show()

#Elbow Plot
sse = []
K = []
k_rng = range(1,20)
for k in k_rng:
    km = KMeans(n_clusters=k)
    km.fit(df[['Latitude','Longitude']])
    sse.append(km.inertia_)
    K.append(k)

plt.xlabel('K')
plt.ylabel('Sum of squared error')
axes= plt.axes()
axes.set_xticks(K)
plt.grid()
plt.plot(k_rng,sse)
#plt.scatter(k_rng,sse,color='green')

km = KMeans(n_clusters=8)
y_predicted = km.fit_predict(df[['Latitude','Longitude']])
df['cluster']=y_predicted
centroids=km.cluster_centers_
df,
centroids

colors = cm.rainbow(np.linspace(0, 1,15))
plt.scatter(df.Latitude,df.Longitude,color=colors[df.cluster])

plt.scatter(centroids[:,0],
            centroids[:,1],
            color='purple',marker='*',
            label='centroid')
plt.xlabel('Latitude')
plt.ylabel('Longitude')
plt.legend()

fig = px.scatter_mapbox(df,
                  lat="Latitude", 
                  lon="Longitude",zoom=10,
                  color="cluster",
                  color_continuous_scale=px.colors.qualitative.G10,
                  height=500,
                  opacity=0.1)
fig.add_trace(go.Scattermapbox(
        lat=centroids[:,0],
        lon=centroids[:,1],
        mode='markers',
        marker=go.scattermapbox.Marker(
            size=10,
            color='rgb(255, 0, 0)',
        )
    ))
fig.update_layout(mapbox_style="open-street-map")
fig.update_layout(margin={"r":0,"t":0,"l":0,"b":0})
fig.show()

fig = go.Figure(go.Densitymapbox(
                  lat=df.Latitude, 
                  lon=df.Longitude, 
                  z=df.Magnitude, 
                  radius=1,)
                )
fig.update_layout(mapbox_style="open-street-map")
fig.update_layout(margin={"r":0,"t":0,"l":0,"b":0})
fig.show()

import seaborn as sns
sns.jointplot(x=df["Latitude"], y=df["Longitude"], kind='kde', color="grey", space=0)
sns.jointplot(x=df["Latitude"], y=df["Longitude"], kind='kde', color="grey", space=3)
sns.jointplot(x=df["Latitude"], y=df["Longitude"], kind='kde',ratio=1)